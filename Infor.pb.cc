// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Infor.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Infor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* my_message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  my_message_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Infor_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Infor_2eproto() {
  protobuf_AddDesc_Infor_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Infor.proto");
  GOOGLE_CHECK(file != NULL);
  my_message_descriptor_ = file->message_type(0);
  static const int my_message_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(my_message, startedtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(my_message, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(my_message, configuredcapacity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(my_message, dfsused_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(my_message, filenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(my_message, replicatedfilesnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(my_message, blocknum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(my_message, livednodenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(my_message, decommissioningnodenum_),
  };
  my_message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      my_message_descriptor_,
      my_message::internal_default_instance(),
      my_message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(my_message, _has_bits_),
      -1,
      -1,
      sizeof(my_message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(my_message, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Infor_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      my_message_descriptor_, my_message::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Infor_2eproto() {
  my_message_default_instance_.Shutdown();
  delete my_message_reflection_;
}

void protobuf_InitDefaults_Infor_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  my_message_default_instance_.DefaultConstruct();
  my_message_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_Infor_2eproto_once_);
void protobuf_InitDefaults_Infor_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_Infor_2eproto_once_,
                 &protobuf_InitDefaults_Infor_2eproto_impl);
}
void protobuf_AddDesc_Infor_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_Infor_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013Infor.proto\"\324\001\n\nmy_message\022\023\n\013startedT"
    "ime\030\001 \002(\t\022\017\n\007version\030\002 \002(\t\022\032\n\022configured"
    "Capacity\030\003 \002(\001\022\017\n\007dfsUsed\030\004 \002(\001\022\017\n\007fileN"
    "um\030\005 \002(\005\022\032\n\022replicatedFilesNum\030\006 \002(\005\022\020\n\010"
    "blockNum\030\007 \002(\005\022\024\n\014livedNodeNum\030\010 \002(\005\022\036\n\026"
    "decommissioningNodeNum\030\t \002(\005", 228);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Infor.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Infor_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_Infor_2eproto_once_);
void protobuf_AddDesc_Infor_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_Infor_2eproto_once_,
                 &protobuf_AddDesc_Infor_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Infor_2eproto {
  StaticDescriptorInitializer_Infor_2eproto() {
    protobuf_AddDesc_Infor_2eproto();
  }
} static_descriptor_initializer_Infor_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int my_message::kStartedTimeFieldNumber;
const int my_message::kVersionFieldNumber;
const int my_message::kConfiguredCapacityFieldNumber;
const int my_message::kDfsUsedFieldNumber;
const int my_message::kFileNumFieldNumber;
const int my_message::kReplicatedFilesNumFieldNumber;
const int my_message::kBlockNumFieldNumber;
const int my_message::kLivedNodeNumFieldNumber;
const int my_message::kDecommissioningNodeNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

my_message::my_message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Infor_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:my_message)
}

void my_message::InitAsDefaultInstance() {
}

my_message::my_message(const my_message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:my_message)
}

void my_message::SharedCtor() {
  _cached_size_ = 0;
  startedtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&configuredcapacity_, 0, reinterpret_cast<char*>(&decommissioningnodenum_) -
    reinterpret_cast<char*>(&configuredcapacity_) + sizeof(decommissioningnodenum_));
}

my_message::~my_message() {
  // @@protoc_insertion_point(destructor:my_message)
  SharedDtor();
}

void my_message::SharedDtor() {
  startedtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void my_message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* my_message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return my_message_descriptor_;
}

const my_message& my_message::default_instance() {
  protobuf_InitDefaults_Infor_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<my_message> my_message_default_instance_;

my_message* my_message::New(::google::protobuf::Arena* arena) const {
  my_message* n = new my_message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void my_message::Clear() {
// @@protoc_insertion_point(message_clear_start:my_message)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(my_message, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<my_message*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(configuredcapacity_, livednodenum_);
    if (has_startedtime()) {
      startedtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_version()) {
      version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  decommissioningnodenum_ = 0;

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool my_message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:my_message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string startedTime = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_startedtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->startedtime().data(), this->startedtime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "my_message.startedTime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_version;
        break;
      }

      // required string version = 2;
      case 2: {
        if (tag == 18) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "my_message.version");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_configuredCapacity;
        break;
      }

      // required double configuredCapacity = 3;
      case 3: {
        if (tag == 25) {
         parse_configuredCapacity:
          set_has_configuredcapacity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &configuredcapacity_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_dfsUsed;
        break;
      }

      // required double dfsUsed = 4;
      case 4: {
        if (tag == 33) {
         parse_dfsUsed:
          set_has_dfsused();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dfsused_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_fileNum;
        break;
      }

      // required int32 fileNum = 5;
      case 5: {
        if (tag == 40) {
         parse_fileNum:
          set_has_filenum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &filenum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_replicatedFilesNum;
        break;
      }

      // required int32 replicatedFilesNum = 6;
      case 6: {
        if (tag == 48) {
         parse_replicatedFilesNum:
          set_has_replicatedfilesnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &replicatedfilesnum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_blockNum;
        break;
      }

      // required int32 blockNum = 7;
      case 7: {
        if (tag == 56) {
         parse_blockNum:
          set_has_blocknum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blocknum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_livedNodeNum;
        break;
      }

      // required int32 livedNodeNum = 8;
      case 8: {
        if (tag == 64) {
         parse_livedNodeNum:
          set_has_livednodenum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &livednodenum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_decommissioningNodeNum;
        break;
      }

      // required int32 decommissioningNodeNum = 9;
      case 9: {
        if (tag == 72) {
         parse_decommissioningNodeNum:
          set_has_decommissioningnodenum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &decommissioningnodenum_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:my_message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:my_message)
  return false;
#undef DO_
}

void my_message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:my_message)
  // required string startedTime = 1;
  if (has_startedtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->startedtime().data(), this->startedtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "my_message.startedTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->startedtime(), output);
  }

  // required string version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "my_message.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // required double configuredCapacity = 3;
  if (has_configuredcapacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->configuredcapacity(), output);
  }

  // required double dfsUsed = 4;
  if (has_dfsused()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->dfsused(), output);
  }

  // required int32 fileNum = 5;
  if (has_filenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->filenum(), output);
  }

  // required int32 replicatedFilesNum = 6;
  if (has_replicatedfilesnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->replicatedfilesnum(), output);
  }

  // required int32 blockNum = 7;
  if (has_blocknum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->blocknum(), output);
  }

  // required int32 livedNodeNum = 8;
  if (has_livednodenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->livednodenum(), output);
  }

  // required int32 decommissioningNodeNum = 9;
  if (has_decommissioningnodenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->decommissioningnodenum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:my_message)
}

::google::protobuf::uint8* my_message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:my_message)
  // required string startedTime = 1;
  if (has_startedtime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->startedtime().data(), this->startedtime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "my_message.startedTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->startedtime(), target);
  }

  // required string version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "my_message.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // required double configuredCapacity = 3;
  if (has_configuredcapacity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->configuredcapacity(), target);
  }

  // required double dfsUsed = 4;
  if (has_dfsused()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->dfsused(), target);
  }

  // required int32 fileNum = 5;
  if (has_filenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->filenum(), target);
  }

  // required int32 replicatedFilesNum = 6;
  if (has_replicatedfilesnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->replicatedfilesnum(), target);
  }

  // required int32 blockNum = 7;
  if (has_blocknum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->blocknum(), target);
  }

  // required int32 livedNodeNum = 8;
  if (has_livednodenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->livednodenum(), target);
  }

  // required int32 decommissioningNodeNum = 9;
  if (has_decommissioningnodenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->decommissioningnodenum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:my_message)
  return target;
}

size_t my_message::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:my_message)
  size_t total_size = 0;

  if (has_startedtime()) {
    // required string startedTime = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->startedtime());
  }

  if (has_version()) {
    // required string version = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  if (has_configuredcapacity()) {
    // required double configuredCapacity = 3;
    total_size += 1 + 8;
  }

  if (has_dfsused()) {
    // required double dfsUsed = 4;
    total_size += 1 + 8;
  }

  if (has_filenum()) {
    // required int32 fileNum = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->filenum());
  }

  if (has_replicatedfilesnum()) {
    // required int32 replicatedFilesNum = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->replicatedfilesnum());
  }

  if (has_blocknum()) {
    // required int32 blockNum = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blocknum());
  }

  if (has_livednodenum()) {
    // required int32 livedNodeNum = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->livednodenum());
  }

  if (has_decommissioningnodenum()) {
    // required int32 decommissioningNodeNum = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->decommissioningnodenum());
  }

  return total_size;
}
size_t my_message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:my_message)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x000001ff) ^ 0x000001ff) == 0) {  // All required fields are present.
    // required string startedTime = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->startedtime());

    // required string version = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());

    // required double configuredCapacity = 3;
    total_size += 1 + 8;

    // required double dfsUsed = 4;
    total_size += 1 + 8;

    // required int32 fileNum = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->filenum());

    // required int32 replicatedFilesNum = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->replicatedfilesnum());

    // required int32 blockNum = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blocknum());

    // required int32 livedNodeNum = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->livednodenum());

    // required int32 decommissioningNodeNum = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->decommissioningnodenum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void my_message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:my_message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const my_message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const my_message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:my_message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:my_message)
    UnsafeMergeFrom(*source);
  }
}

void my_message::MergeFrom(const my_message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:my_message)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void my_message::UnsafeMergeFrom(const my_message& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_startedtime()) {
      set_has_startedtime();
      startedtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.startedtime_);
    }
    if (from.has_version()) {
      set_has_version();
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (from.has_configuredcapacity()) {
      set_configuredcapacity(from.configuredcapacity());
    }
    if (from.has_dfsused()) {
      set_dfsused(from.dfsused());
    }
    if (from.has_filenum()) {
      set_filenum(from.filenum());
    }
    if (from.has_replicatedfilesnum()) {
      set_replicatedfilesnum(from.replicatedfilesnum());
    }
    if (from.has_blocknum()) {
      set_blocknum(from.blocknum());
    }
    if (from.has_livednodenum()) {
      set_livednodenum(from.livednodenum());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_decommissioningnodenum()) {
      set_decommissioningnodenum(from.decommissioningnodenum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void my_message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:my_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void my_message::CopyFrom(const my_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:my_message)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool my_message::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;

  return true;
}

void my_message::Swap(my_message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void my_message::InternalSwap(my_message* other) {
  startedtime_.Swap(&other->startedtime_);
  version_.Swap(&other->version_);
  std::swap(configuredcapacity_, other->configuredcapacity_);
  std::swap(dfsused_, other->dfsused_);
  std::swap(filenum_, other->filenum_);
  std::swap(replicatedfilesnum_, other->replicatedfilesnum_);
  std::swap(blocknum_, other->blocknum_);
  std::swap(livednodenum_, other->livednodenum_);
  std::swap(decommissioningnodenum_, other->decommissioningnodenum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata my_message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = my_message_descriptor_;
  metadata.reflection = my_message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// my_message

// required string startedTime = 1;
bool my_message::has_startedtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void my_message::set_has_startedtime() {
  _has_bits_[0] |= 0x00000001u;
}
void my_message::clear_has_startedtime() {
  _has_bits_[0] &= ~0x00000001u;
}
void my_message::clear_startedtime() {
  startedtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_startedtime();
}
const ::std::string& my_message::startedtime() const {
  // @@protoc_insertion_point(field_get:my_message.startedTime)
  return startedtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void my_message::set_startedtime(const ::std::string& value) {
  set_has_startedtime();
  startedtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_message.startedTime)
}
void my_message::set_startedtime(const char* value) {
  set_has_startedtime();
  startedtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_message.startedTime)
}
void my_message::set_startedtime(const char* value, size_t size) {
  set_has_startedtime();
  startedtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_message.startedTime)
}
::std::string* my_message::mutable_startedtime() {
  set_has_startedtime();
  // @@protoc_insertion_point(field_mutable:my_message.startedTime)
  return startedtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* my_message::release_startedtime() {
  // @@protoc_insertion_point(field_release:my_message.startedTime)
  clear_has_startedtime();
  return startedtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void my_message::set_allocated_startedtime(::std::string* startedtime) {
  if (startedtime != NULL) {
    set_has_startedtime();
  } else {
    clear_has_startedtime();
  }
  startedtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), startedtime);
  // @@protoc_insertion_point(field_set_allocated:my_message.startedTime)
}

// required string version = 2;
bool my_message::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void my_message::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void my_message::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void my_message::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
const ::std::string& my_message::version() const {
  // @@protoc_insertion_point(field_get:my_message.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void my_message::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:my_message.version)
}
void my_message::set_version(const char* value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:my_message.version)
}
void my_message::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:my_message.version)
}
::std::string* my_message::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:my_message.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* my_message::release_version() {
  // @@protoc_insertion_point(field_release:my_message.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void my_message::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:my_message.version)
}

// required double configuredCapacity = 3;
bool my_message::has_configuredcapacity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void my_message::set_has_configuredcapacity() {
  _has_bits_[0] |= 0x00000004u;
}
void my_message::clear_has_configuredcapacity() {
  _has_bits_[0] &= ~0x00000004u;
}
void my_message::clear_configuredcapacity() {
  configuredcapacity_ = 0;
  clear_has_configuredcapacity();
}
double my_message::configuredcapacity() const {
  // @@protoc_insertion_point(field_get:my_message.configuredCapacity)
  return configuredcapacity_;
}
void my_message::set_configuredcapacity(double value) {
  set_has_configuredcapacity();
  configuredcapacity_ = value;
  // @@protoc_insertion_point(field_set:my_message.configuredCapacity)
}

// required double dfsUsed = 4;
bool my_message::has_dfsused() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void my_message::set_has_dfsused() {
  _has_bits_[0] |= 0x00000008u;
}
void my_message::clear_has_dfsused() {
  _has_bits_[0] &= ~0x00000008u;
}
void my_message::clear_dfsused() {
  dfsused_ = 0;
  clear_has_dfsused();
}
double my_message::dfsused() const {
  // @@protoc_insertion_point(field_get:my_message.dfsUsed)
  return dfsused_;
}
void my_message::set_dfsused(double value) {
  set_has_dfsused();
  dfsused_ = value;
  // @@protoc_insertion_point(field_set:my_message.dfsUsed)
}

// required int32 fileNum = 5;
bool my_message::has_filenum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void my_message::set_has_filenum() {
  _has_bits_[0] |= 0x00000010u;
}
void my_message::clear_has_filenum() {
  _has_bits_[0] &= ~0x00000010u;
}
void my_message::clear_filenum() {
  filenum_ = 0;
  clear_has_filenum();
}
::google::protobuf::int32 my_message::filenum() const {
  // @@protoc_insertion_point(field_get:my_message.fileNum)
  return filenum_;
}
void my_message::set_filenum(::google::protobuf::int32 value) {
  set_has_filenum();
  filenum_ = value;
  // @@protoc_insertion_point(field_set:my_message.fileNum)
}

// required int32 replicatedFilesNum = 6;
bool my_message::has_replicatedfilesnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void my_message::set_has_replicatedfilesnum() {
  _has_bits_[0] |= 0x00000020u;
}
void my_message::clear_has_replicatedfilesnum() {
  _has_bits_[0] &= ~0x00000020u;
}
void my_message::clear_replicatedfilesnum() {
  replicatedfilesnum_ = 0;
  clear_has_replicatedfilesnum();
}
::google::protobuf::int32 my_message::replicatedfilesnum() const {
  // @@protoc_insertion_point(field_get:my_message.replicatedFilesNum)
  return replicatedfilesnum_;
}
void my_message::set_replicatedfilesnum(::google::protobuf::int32 value) {
  set_has_replicatedfilesnum();
  replicatedfilesnum_ = value;
  // @@protoc_insertion_point(field_set:my_message.replicatedFilesNum)
}

// required int32 blockNum = 7;
bool my_message::has_blocknum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void my_message::set_has_blocknum() {
  _has_bits_[0] |= 0x00000040u;
}
void my_message::clear_has_blocknum() {
  _has_bits_[0] &= ~0x00000040u;
}
void my_message::clear_blocknum() {
  blocknum_ = 0;
  clear_has_blocknum();
}
::google::protobuf::int32 my_message::blocknum() const {
  // @@protoc_insertion_point(field_get:my_message.blockNum)
  return blocknum_;
}
void my_message::set_blocknum(::google::protobuf::int32 value) {
  set_has_blocknum();
  blocknum_ = value;
  // @@protoc_insertion_point(field_set:my_message.blockNum)
}

// required int32 livedNodeNum = 8;
bool my_message::has_livednodenum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void my_message::set_has_livednodenum() {
  _has_bits_[0] |= 0x00000080u;
}
void my_message::clear_has_livednodenum() {
  _has_bits_[0] &= ~0x00000080u;
}
void my_message::clear_livednodenum() {
  livednodenum_ = 0;
  clear_has_livednodenum();
}
::google::protobuf::int32 my_message::livednodenum() const {
  // @@protoc_insertion_point(field_get:my_message.livedNodeNum)
  return livednodenum_;
}
void my_message::set_livednodenum(::google::protobuf::int32 value) {
  set_has_livednodenum();
  livednodenum_ = value;
  // @@protoc_insertion_point(field_set:my_message.livedNodeNum)
}

// required int32 decommissioningNodeNum = 9;
bool my_message::has_decommissioningnodenum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void my_message::set_has_decommissioningnodenum() {
  _has_bits_[0] |= 0x00000100u;
}
void my_message::clear_has_decommissioningnodenum() {
  _has_bits_[0] &= ~0x00000100u;
}
void my_message::clear_decommissioningnodenum() {
  decommissioningnodenum_ = 0;
  clear_has_decommissioningnodenum();
}
::google::protobuf::int32 my_message::decommissioningnodenum() const {
  // @@protoc_insertion_point(field_get:my_message.decommissioningNodeNum)
  return decommissioningnodenum_;
}
void my_message::set_decommissioningnodenum(::google::protobuf::int32 value) {
  set_has_decommissioningnodenum();
  decommissioningnodenum_ = value;
  // @@protoc_insertion_point(field_set:my_message.decommissioningNodeNum)
}

inline const my_message* my_message::internal_default_instance() {
  return &my_message_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
